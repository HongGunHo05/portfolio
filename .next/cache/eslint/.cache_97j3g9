[{"/Users/honggeonho/Documents/workspace/portfolio/pages/_app.tsx":"1","/Users/honggeonho/Documents/workspace/portfolio/pages/_document.tsx":"2","/Users/honggeonho/Documents/workspace/portfolio/pages/index.tsx":"3","/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Center.tsx":"4","/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Divider.tsx":"5","/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Portal.tsx":"6","/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Text.style.tsx":"7","/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Text.tsx":"8","/Users/honggeonho/Documents/workspace/portfolio/src/components/organisms/SectionTitle.tsx":"9","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/AboutMeSection.tsx":"10","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/ArchivingSection.tsx":"11","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/CareerSection.tsx":"12","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/IntroSection.style.tsx":"13","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/IntroSection.tsx":"14","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/MySkillSection.tsx":"15","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/ProjectSection.tsx":"16","/Users/honggeonho/Documents/workspace/portfolio/src/emotion.d.ts":"17"},{"size":701,"mtime":1726802241628,"results":"18","hashOfConfig":"19"},{"size":334,"mtime":1726802241628,"results":"20","hashOfConfig":"19"},{"size":7613,"mtime":1726802241629,"results":"21","hashOfConfig":"19"},{"size":865,"mtime":1726802241683,"results":"22","hashOfConfig":"19"},{"size":303,"mtime":1726802241683,"results":"23","hashOfConfig":"19"},{"size":450,"mtime":1726802241683,"results":"24","hashOfConfig":"19"},{"size":264,"mtime":1726802241683,"results":"25","hashOfConfig":"19"},{"size":656,"mtime":1726802241684,"results":"26","hashOfConfig":"19"},{"size":1269,"mtime":1726802241684,"results":"27","hashOfConfig":"19"},{"size":6513,"mtime":1726802241684,"results":"28","hashOfConfig":"19"},{"size":5500,"mtime":1726802241684,"results":"29","hashOfConfig":"19"},{"size":13802,"mtime":1726817811335,"results":"30","hashOfConfig":"19"},{"size":96,"mtime":1726802241684,"results":"31","hashOfConfig":"19"},{"size":5114,"mtime":1726802241684,"results":"32","hashOfConfig":"19"},{"size":13762,"mtime":1726805964165,"results":"33","hashOfConfig":"19"},{"size":12112,"mtime":1726817836705,"results":"34","hashOfConfig":"19"},{"size":233,"mtime":1726802241685,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bipqfd",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/honggeonho/Documents/workspace/portfolio/pages/_app.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/pages/_document.tsx",["92"],[],"import {Html, Head, Main, NextScript} from 'next/document'\n\nexport default function Document() {\n    return (\n        <Html>\n            <Head>\n                <title>{`Geonho Portfolio`}</title>\n            </Head>\n\n            <body>\n                <Main/>\n                <NextScript/>\n            </body>\n        </Html>\n    )\n}\n","/Users/honggeonho/Documents/workspace/portfolio/pages/index.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Center.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Divider.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Portal.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Text.style.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/atoms/Text.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/organisms/SectionTitle.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/AboutMeSection.tsx",["93"],[],"import Center from '@components/atoms/Center'\nimport Text from '@components/atoms/Text'\nimport {Section} from './IntroSection.style'\nimport {motion} from 'framer-motion'\nimport {useTheme} from '@emotion/react'\nimport {forwardRef, ForwardRefRenderFunction} from 'react'\nimport SectionTitle from '@components/organisms/SectionTitle'\nimport {SectionMethodsType} from 'pages'\n\nconst ABOUT_ME_FIELD = [\n    {title: '사진', fields: ['/static/images/20230221_031015.jpg']},\n    {title: '이름', fields: ['홍건호']},\n    {title: '생년월일', fields: ['1998.05.27']},\n    {title: '전화번호', fields: ['010-3156-6304']},\n    {title: 'Email', fields: ['booklike112@naver.com']},\n]\n\ntype AboutMeSectionProps = {\n    sectionMethods: SectionMethodsType\n}\n\nconst ShowBox = () => {\n    const theme = useTheme()\n\n    return (\n        <section\n            css={{\n                display: 'flex',\n                flexDirection: 'column',\n                '@media (min-width: 800px)': {\n                    flexDirection: 'row',\n                },\n                justifyContent: \"space-around\",\n                width: \"100%\",\n                gap: '1rem',\n                alignItems: \"center\"\n            }}\n        >\n            {ABOUT_ME_FIELD.map(({fields, title}) => (\n                    <div\n                        key={title}\n                        css={title === '사진' ? {\n                                backgroundColor: theme.colors.white,\n                                padding: '2rem',\n                                borderRadius: '1rem',\n                                display: 'flex',\n                                justifyContent: \"center\",\n                                gap: '0.5rem',\n                                boxShadow: '1rem 1rem 1rem 0 rgb(68 68 68 / 20%)',\n                                width: '70%',\n                                '@media (min-width: 800px)': {\n                                    width: '13%',\n                                    padding: '0.5rem 0rem'\n                                },\n                            }\n                            : {\n                                backgroundColor: theme.colors.white,\n                                padding: '2rem',\n                                borderRadius: '1rem',\n                                display: 'flex',\n                                flexDirection: 'column',\n                                gap: '0.5rem',\n                                boxShadow: '1rem 1rem 1rem 0 rgb(68 68 68 / 20%)',\n                                width: '70%',\n                                '@media (min-width: 800px)': {\n                                    width: '20%',\n                                },\n                            }}\n                    >\n\n                        {\n                            title === '사진'\n                                ? <img css={{\n                                    width: \"60%\",\n                                }} src={\"/static/images/20230221_031015.jpg\"} alt={\"\"}/>\n                                : <>\n                                    <Text\n                                        css={{\n                                            color: theme.colors.black,\n                                            fontSize: '1.5rem',\n                                            borderBottom: '1px solid #ccc',\n                                            fontWeight: 'bold',\n                                            marginBottom: '1rem',\n                                        }}\n                                    >\n                                        {title}\n                                    </Text>\n                                    <article\n                                        css={{\n                                            display: 'flex',\n                                        }}\n                                    >\n                                        {fields.map((field, index) => (\n                                            <Text\n                                                key={field}\n                                                css={{\n                                                    fontSize: '1.25rem',\n                                                }}\n                                            >\n                                                {field}\n                                            </Text>\n                                        ))}\n\n                                    </article>\n                                </>\n\n                        }\n                    </div>\n                )\n            )}\n\n        </section>\n    )\n}\n\nconst AboutMeSection: ForwardRefRenderFunction<\n    HTMLDivElement,\n    AboutMeSectionProps\n> = ({sectionMethods}, ref) => {\n    const theme = useTheme()\n\n    return (\n        <Section\n            ref={ref}\n            css={{\n                // justifyContent: 'center',\n                // alignItems: 'flex-start',\n                backgroundColor: theme.colors.gray,\n                padding: '6rem 2rem',\n            }}\n        >\n            <Center\n                css={{\n                    flexDirection: 'column',\n                    flex: 1,\n                }}\n            >\n                <SectionTitle\n                    title=\"ABOUT ME\"\n                    onClickScrollClip={() => sectionMethods.scrollToSection(1)}\n                />\n\n                <motion.div\n                    initial={{translateY: 0, opacity: 0}}\n                    whileInView={{\n                        translateY: -20,\n                        opacity: 1,\n                    }}\n                    transition={{\n                        delay: 0.6,\n                        x: {duration: 1},\n                        default: {ease: 'linear'},\n                    }}\n                    viewport={{\n                        once: true,\n                    }}\n                    css={{\n                        display: 'flex',\n                        width: '90%',\n                        justifyContent: 'space-around',\n                        marginTop: '4rem',\n                        gap: '3rem',\n                        flexDirection: 'column',\n                        '@media (min-width: 800px)': {\n                            flexDirection: 'row',\n                        },\n                    }}\n                >\n                    <ShowBox/>\n\n                </motion.div>\n            </Center>\n        </Section>\n    )\n}\n\nexport default forwardRef(AboutMeSection)\n","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/ArchivingSection.tsx",["94"],[],"import Center from '@components/atoms/Center'\nimport Text from '@components/atoms/Text'\nimport {Section} from './IntroSection.style'\nimport {motion} from 'framer-motion'\nimport {useTheme} from '@emotion/react'\nimport IconPortfolio from '@public/static/images/portfolio-logo.png'\nimport IconGithub from '@public/static/logo/skills/github.png'\nimport IconVelog from '@public/static/logo/skills/velog.png'\nimport Image from 'next/image'\nimport SectionTitle from '@components/organisms/SectionTitle'\nimport {forwardRef, ForwardRefRenderFunction} from 'react'\nimport {SectionMethodsType} from 'pages'\n\n// TODO: black 컬러 일부 gray.800 수정\ntype ArchivingSectionProps = {\n    sectionMethods: SectionMethodsType\n}\n\nconst ArchivingSection: ForwardRefRenderFunction<\n    HTMLDivElement,\n    ArchivingSectionProps\n> = ({sectionMethods}, ref) => {\n    const theme = useTheme()\n\n    return (\n        <Section\n            ref={ref}\n            css={{\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                backgroundColor: theme.colors.gray3,\n                padding: '6rem 2rem',\n            }}\n        >\n            <Center\n                css={{\n                    flexDirection: 'column',\n                    flex: 1,\n                }}\n            >\n                <SectionTitle\n                    title=\"ARCHIVING\"\n                    color={theme.colors.white}\n                    onClickScrollClip={() => sectionMethods.scrollToSection(3)}\n                />\n\n                <motion.div\n                    initial={{translateY: 0, opacity: 0}}\n                    whileInView={{\n                        translateY: -20,\n                        opacity: 1,\n                    }}\n                    transition={{\n                        delay: 0.6,\n                        x: {duration: 1},\n                        default: {ease: 'linear'},\n                    }}\n                    viewport={{\n                        once: true,\n                    }}\n                    css={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: '4rem',\n                        marginTop: '3rem',\n                    }}\n                >\n                    <div\n                        css={{\n                            display: 'flex',\n                            gap: '4rem',\n                            flexDirection: 'column',\n                            '@media (min-width: 1200px)': {\n                                flexDirection: 'row',\n                            },\n                        }}\n                    >\n                        <motion.div\n                            whileHover={{scale: 1.1}}\n                            whileTap={{scale: 0.9}}\n                            onClick={() => window.open('https://github.com/HongGunHo05')}\n                            css={{\n                                backgroundColor: '#f5f5f5',\n                                padding: '2rem',\n                                borderRadius: '1rem',\n                                display: 'flex',\n                                flexDirection: 'column',\n                                cursor: 'pointer',\n                                flex: 1,\n                            }}\n                        >\n                            <div\n                                css={{\n                                    width: '12rem',\n                                    marginLeft: '-0.25rem',\n                                }}\n                            >\n                                <Image src={IconGithub}/>\n                            </div>\n                            <div\n                                css={{\n                                    marginTop: '1rem',\n                                    marginBottom: '1rem',\n                                }}\n                            >\n                                <a\n                                    css={{\n                                        whiteSpace: 'nowrap',\n                                    }}\n                                    href=\"https://github.com/HongGunHo05\"\n                                >\n                                    github.com/HongGunHo05\n                                </a>\n                            </div>\n\n                            <div>\n                                <Text\n                                    css={{\n                                        fontWeight: 'bold',\n                                    }}\n                                >\n                                    소스 코드 저장소\n                                </Text>\n                                <Text>입니다.</Text>\n                            </div>\n                            <ul\n                                css={{\n                                    paddingLeft: '1rem',\n                                    li: {\n                                        marginBottom: '0.5rem',\n                                    },\n                                }}\n                            >\n                                <li>\n                                    <Text>과거 프로젝트 및 각종 소스 코드</Text>\n                                </li>\n                            </ul>\n                        </motion.div>\n                    </div>\n                </motion.div>\n            </Center>\n        </Section>\n    )\n}\n\nexport default forwardRef(ArchivingSection)\n","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/CareerSection.tsx",["95"],[],"import Center from '@components/atoms/Center'\nimport Text from '@components/atoms/Text'\nimport {Section} from './IntroSection.style'\nimport {motion} from 'framer-motion'\n\nimport Image from 'next/image'\nimport ImgDouzone from \"@public/static/images/douzone.jpg\"\nimport Divider from '@components/atoms/Divider'\nimport {forwardRef, ForwardRefRenderFunction, ReactElement} from 'react'\nimport SectionTitle from '@components/organisms/SectionTitle'\nimport {SectionMethodsType} from 'pages'\n\ntype CareerItemType = {\n    company: {\n        title: string\n        period: string[]\n        bio: string | ReactElement\n        imageComponent: ReactElement\n        subbio: string | ReactElement\n    }\n    projectList: {\n        title: string\n        period: string[]\n        description: (string | ReactElement)[]\n    }[]\n}\n\nconst CareerList: CareerItemType[] = [\n    {\n        company: {\n            title: '(주) 더존비즈온',\n            imageComponent: (\n                <div\n                    css={{\n                        backgroundColor: 'white',\n                        borderRadius: '100%',\n                        width: '250px',\n                        height: '250px',\n                        display: 'flex',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        border: '1px solid #ccc',\n                    }}\n                >\n                    <div\n                        css={{\n                            position: 'absolute',\n                            width: '10rem',\n                        }}\n                    >\n                        <Image src={ImgDouzone}/>\n                    </div>\n                </div>\n            ),\n\n            period: ['2023.03', '2024.05'],\n            bio: (\n                <>\n                    (주) 더존비즈온은{' '}\n                    <Text bold>기업 경영과 회계 솔루션을 제공하는 있는 회사</Text>\n                    이며, 다양한 산업 분야에 맞춤형 ERP 시스템과 클라우드 서비스를 개발하고 있습니다.\n                    이 회사는 중소기업부터 대기업까지 폭넓은 고객층을 보유하고 있으며, 효율적인 경영 관리와 데이터 분석을 통해 기업의 성장을 지원합니다.\n                    더존비즈온은 혁신적인 기술을 적용하여 사용자 친화적인 인터페이스와 강력한 기능을 갖춘 솔루션을 제공하며, 지속적인 연구개발을 통해 업계를 선도하고 있습니다.\n                    또한, 고객의 요구에 맞춘 맞춤형 서비스를 통해 높은 고객 만족도를 유지하고 있습니다.\n                </>\n            ),\n            subbio: (\n                <>\n                    프론트엔드 업무를 중점으로 일을 진행 하였고 자바를 이용한 백 프로젝트도 맡아 일을 진행 하였습니다.\n                    <Text bold>\n                        회사의 프로그램에 적용 시킬 다양한 신규 프로젝트를 진행하며 새로운 기능 및 언어들을 사용 하였습니다.\n                    </Text>\n                </>\n            ),\n        },\n        projectList: [\n            {\n                title: 'EDC 프로젝트',\n                period: ['2023.10', '2024.04'],\n                description: [\n                    '- 사용자가 직접 데이터 관리 및 전송 주기 설정 등을 하여 보다 편리함을 주기 위해 개발',\n                    <>\n                        - 신규 서비스 이기에 빠른 프로토 타입 제작 및 시연 후 {' '}\n                        <Text bold>\n                            고도화를 통한 리엑트 컴포넌트 성능 정리\n                        </Text>\n                    </>,\n                    <>\n                        - 현재 병원 3곳에서 사용\n                    </>,\n                ],\n            },\n            {\n                title: 'BI',\n                period: ['2023.06', '2024.04'],\n                description: [\n                    '- 회사 프로그램과 연결 되어 있는 BI 관리',\n                    <>\n                        - SSO : 프로그램 로그인을 통한 생성된 토큰 관리를 하여 BI에 추가적은 로그인 단계 넘어가게 하였습니다.\n                    </>,\n                    <>\n                        - 신규 병원이 회사와 계약을 맺었을 시 BI 구축 하였습니다.\n                    </>,\n                    <>\n                        - 기존 코드 고도화 하여 사용하지 않던 공유 기능 적용 및 불필요한 코드 삭제 하였습니다.\n                    </>,\n                ],\n            },\n            {\n                title: '사내 프로그램 UI 디자인 및 기능 구현',\n                period: ['2023.03', '2024.04'],\n                description: [\n                    '- 개발자가 직접 쓰는 화면 커스텀',\n                    <>\n                        - 행안부에서 제공하는 검색 서비스 회사 스타일에 맞게 변경 하였습니다.\n                    </>,\n                    <>\n                        {\"   \"}검색어 수정 api를 이용하여 사용자가 잘못 검색 시 입력값과 유사한 검색어 추천 기능 추가 하였습니다.\n                    </>,\n                    <>\n                        - apisix등 회사 내 사용 프로그램을 회사 스타일로 변경 및 디자인 변경으로 사용자의 편리함 제공 하였습니다.\n                    </>,\n                ],\n            }, {\n                title: '병원 데이터 대시보드',\n                period: ['2023.07', '2023.07'],\n                description: [\n                    '- 병원별 데이터 시각화를 해주기 위한 대시보드 제작',\n                    <>\n                        - 기존 데이저 전송 하는 병원들의 데이터 관리 및 시각화를 위해 대시보드 제작 하였습니다.\n                    </>,\n                    <>\n                        - ECharts를 이용하여 유연한 차트 및 사용자의 커스텀 가능한 테이블 제공하여 다양한 화면 제공 하였습니다.\n                    </>,\n                ],\n            }, {\n                title: '신규 기술 소개 및 시연',\n                period: ['2023.03', '2024.04'],\n                description: [\n                    '- 신규 기술을 이용하여 발표 및 테스트 서비스 제작',\n                    <>\n                        - GPT4 Function Calling 등 새로운 기술 나왔을 시 PPT 제작하여 공유 및 발표 하였습니다.\n                    </>,\n                    <>\n                        - Function Calling을 이용한 SQL Tuner 서비스 , 사용자 입력 따른 FastAPI 코드구성 서비스 구축 하였습니다.\n                    </>,\n                ],\n            }\n        ],\n    }\n]\n\ntype CareerContentProps = {\n    career: CareerItemType\n}\n\nconst CareerContent = ({career}: CareerContentProps) => (\n    <motion.div\n        css={{\n            display: 'flex',\n            width: '100%',\n            maxWidth: '71.25rem',\n            gap: '4rem',\n            flexDirection: 'column',\n            '@media (min-width: 800px)': {\n                flexDirection: 'row',\n            },\n        }}\n    >\n        <div\n            css={{\n                borderBottomColor: '#ccc',\n                borderBottomWidth: 1,\n                borderBottomStyle: 'solid',\n                paddingBottom: '4rem',\n                display: 'flex',\n                justifyContent: 'center',\n\n                '@media (min-width: 800px)': {\n                    borderRightColor: '#ccc',\n                    borderRightWidth: 1,\n                    borderBottomWidth: 0,\n                    borderRightStyle: 'solid',\n                    paddingRight: '4rem',\n                },\n            }}\n        >\n            {career.company.imageComponent}\n        </div>\n        <div>\n            <header>\n                <div>\n                    <Text\n                        css={{\n                            fontSize: '1.75rem',\n                            fontWeight: 'bold',\n                        }}\n                    >\n                        {career.company.title}\n                    </Text>\n                </div>\n                <div\n                    css={{\n                        marginTop: '0.5rem',\n                        marginBottom: '0.5rem',\n                    }}\n                >\n                    <Text\n                        css={{\n                            fontSize: '1.25rem',\n                            color: '#6c757d',\n                        }}\n                    >\n                        {career.company.period[0]} - {career.company.period[1]}\n                    </Text>\n                </div>\n            </header>\n            <article>\n                <Text\n                    css={{\n                        fontSize: '1.2rem',\n                    }}\n                >\n                    {career.company.bio}\n                </Text>\n            </article>\n            <article\n                css={{\n                    marginTop: '1rem',\n                }}\n            >\n                <Text\n                    css={{\n                        fontSize: '1.2rem',\n                    }}\n                >\n                    {career.company.subbio}\n                </Text>\n            </article>\n            <Divider\n                style={{\n                    marginTop: '1rem',\n                    marginBottom: '1rem',\n                }}\n            />\n\n            {/** TODO: 태그를 통해 사용 기술 추가하기 */}\n            <div\n                css={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '1rem',\n                }}\n            >\n                {career.projectList\n                    .sort(\n                        ({period: [peroidA]}, {period: [peroidB]}) =>\n                            new Date(peroidB).getTime() - new Date(peroidA).getTime()\n                    )\n                    .map((project) => (\n                        <article key={project.title}>\n                            <Text\n                                css={{\n                                    fontWeight: 'bold',\n                                    fontSize: '1.2rem',\n                                }}\n                            >\n                                ▎ {project.title}\n                            </Text>\n                            <div\n                                css={{\n                                    marginTop: '0.5rem',\n                                    marginBottom: '0.5rem',\n                                }}\n                            >\n                                <Text\n                                    css={{\n                                        fontSize: '1.1rem',\n                                        color: '#6c757d',\n                                    }}\n                                >\n                                    {project.period[0]} - {project.period[1]}\n                                </Text>\n                            </div>\n                            <ul\n                                css={{\n                                    paddingLeft: '1rem',\n                                    li: {\n                                        marginBottom: '0.5rem',\n                                    },\n                                }}\n                            >\n                                {project.description.map((desc, idx) => (\n                                    <li key={idx}>\n                                        <Text>{desc}</Text>\n                                    </li>\n                                ))}\n                            </ul>\n                        </article>\n                    ))}\n            </div>\n        </div>\n    </motion.div>\n)\n\ntype CareerSectionProps = {\n    sectionMethods: SectionMethodsType\n}\n\nconst CareerSection: ForwardRefRenderFunction<\n    HTMLDivElement,\n    CareerSectionProps\n> = ({sectionMethods}, ref) => {\n    return (\n        <Section\n            ref={ref}\n            css={{\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                backgroundColor: '#f5f5f5',\n                padding: '6rem 2rem',\n            }}\n        >\n            <Center\n                css={{\n                    flexDirection: 'column',\n                    flex: 1,\n                }}\n            >\n                <SectionTitle\n                    title=\"CAREER\"\n                    onClickScrollClip={() => sectionMethods.scrollToSection(4)}\n                />\n\n                <motion.div\n                    initial={{translateY: 0, opacity: 0}}\n                    whileInView={{\n                        translateY: -20,\n                        opacity: 1,\n                    }}\n                    transition={{\n                        delay: 0.3,\n                        x: {duration: 1},\n                        default: {ease: 'linear'},\n                    }}\n                    viewport={{\n                        once: true,\n                    }}\n                    css={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        marginTop: '3rem',\n                        gap: '4rem',\n                    }}\n                >\n                    {CareerList.map((career) => (\n                        <CareerContent career={career} key={career.company.title}/>\n                    ))}\n                </motion.div>\n            </Center>\n        </Section>\n    )\n}\n\nexport default forwardRef(CareerSection)\n","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/IntroSection.style.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/IntroSection.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/MySkillSection.tsx",["96"],[],"import Center from '@components/atoms/Center'\nimport Text from '@components/atoms/Text'\nimport {Section} from './IntroSection.style'\nimport {motion} from 'framer-motion'\nimport Image, {StaticImageData} from 'next/image'\nimport IconHtml5 from '@public/static/logo/skills/html5.png'\nimport IconCss from '@public/static/logo/skills/css.png'\nimport IconJs from '@public/static/logo/skills/js.png'\nimport IconTs from '@public/static/logo/skills/ts.png'\nimport IconSass from '@public/static/logo/skills/sass.png'\nimport IconStyledComponent from '@public/static/logo/skills/styled-component.png'\nimport IconReact from '@public/static/logo/skills/react.png'\nimport IconRedux from '@public/static/logo/skills/redux.png'\nimport IconMysql from '@public/static/logo/skills/mysql.png'\nimport IconPostgresql from '@public/static/logo/skills/postgresql.png'\nimport IconFigma from '@public/static/logo/skills/figma.png'\nimport IconGit from '@public/static/logo/skills/git.jpg'\nimport IconJava from '@public/static/logo/skills/java.png'\nimport IconPython from '@public/static/logo/skills/python.jpg'\nimport IconNotion from '@public/static/logo/skills/notion.png'\n\nimport {Interpolation} from '@emotion/styled'\nimport {CSSObject, Theme, useTheme} from '@emotion/react'\nimport SectionTitle from '@components/organisms/SectionTitle'\nimport {forwardRef, ForwardRefRenderFunction} from 'react'\nimport {SectionMethodsType} from 'pages'\nimport {theme} from \"../../../pages/_app\";\n\ntype SkillItemProps = {\n    src: string | StaticImageData\n    imageContainerStyle: Interpolation<Theme>\n    containerStyle?: CSSObject\n}\n\nconst SkillItem = ({\n                       src,\n                       imageContainerStyle,\n                       containerStyle,\n                   }: SkillItemProps) => (\n    <motion.div\n        whileHover={{scale: 1.1}}\n        css={{\n            borderWidth: 2,\n            borderColor: '#eeeeee',\n            borderStyle: 'solid',\n            cursor: 'pointer',\n            borderRadius: '1rem',\n            userSelect: 'none',\n            display: 'flex',\n            width: '90px',\n            height: '90px',\n            alignItems: 'center',\n            justifyContent: 'center',\n            ...containerStyle,\n        }}\n    >\n        <div css={imageContainerStyle}>\n            <Image src={src}/>\n        </div>\n    </motion.div>\n)\n\nconst FrontendSection = () => {\n    const theme = useTheme()\n\n    return (\n        <section>\n            <div\n                css={{\n                    backgroundColor: theme.colors.white,\n                    padding: '2rem',\n                    borderRadius: '1rem',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '0.5rem',\n                    boxShadow: '1rem 1rem 1rem 0 rgb(68 68 68 / 20%)',\n                }}\n            >\n                <Text\n                    css={{\n                        color: theme.colors.carrot,\n                        fontSize: '1.5rem',\n                        borderBottom: '1px solid #ccc',\n                        fontWeight: 'bold',\n                        marginBottom: '1rem',\n                    }}\n                >\n                    FrontEnd\n                </Text>\n                {/** 1 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                        gap: '0.5rem',\n                        justifyContent: 'space-between',\n                        width: '280px',\n                    }}\n                >\n                    <SkillItem\n                        src={IconHtml5}\n                        imageContainerStyle={{\n                            width: '4.25rem',\n                        }}\n                    />\n                    <SkillItem\n                        src={IconCss}\n                        imageContainerStyle={{\n                            width: '3rem',\n                        }}\n                    />\n                    <SkillItem\n                        src={IconJs}\n                        imageContainerStyle={{\n                            width: '3rem',\n                        }}\n                    />\n                </article>\n\n                {/** 2 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                        gap: '0.5rem',\n                        justifyContent: 'space-between',\n                        width: '280px',\n                    }}\n                >\n                    <SkillItem\n                        src={IconTs}\n                        imageContainerStyle={{\n                            width: '4rem',\n                        }}\n                    />\n\n                    <SkillItem\n                        src={IconSass}\n                        imageContainerStyle={{\n                            width: '10rem',\n                            marginLeft: '-1rem',\n                            marginRight: '-1rem',\n                        }}\n                    />\n\n                    <SkillItem\n                        src={IconStyledComponent}\n                        imageContainerStyle={{\n                            width: '4rem',\n                        }}\n                        containerStyle={{\n                            backgroundColor: 'black',\n                        }}\n                    />\n                </article>\n\n\n                {/** 6 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                    }}\n                >\n                    <SkillItem\n                        src={IconReact}\n                        imageContainerStyle={{\n                            width: '12rem',\n                            paddingTop: '0.7rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                </article>\n\n                {/** 8 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                    }}\n                >\n                    <SkillItem\n                        src={IconRedux}\n                        imageContainerStyle={{\n                            width: '12rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                </article>\n            </div>\n        </section>\n    )\n}\n\nconst BackendSection = () => {\n    const theme = useTheme()\n\n    return (\n        <section>\n            <div\n                css={{\n                    backgroundColor: theme.colors.white,\n                    padding: '2rem',\n                    borderRadius: '1rem',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: '0.5rem',\n                    boxShadow: '1rem 1rem 1rem 0 rgb(68 68 68 / 20%)',\n                }}\n            >\n                <Text\n                    css={{\n                        color: theme.colors.carrot,\n                        fontSize: '1.5rem',\n                        borderBottom: '1px solid #ccc',\n                        fontWeight: 'bold',\n                        marginBottom: '1rem',\n                    }}\n                >\n                    Backend\n                </Text>\n                {/** 1 Line */}\n\n                {/** 2 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                        gap: '0.5rem',\n                    }}\n                >\n                    <SkillItem\n                        src={IconJava}\n                        imageContainerStyle={{\n                            width: '5rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                    <SkillItem\n                        src={IconPython}\n                        imageContainerStyle={{\n                            width: '3.5rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n\n                </article>\n\n                {/** 3 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                        gap: '0.5rem',\n                    }}\n                >\n                    <SkillItem\n                        src={IconMysql}\n                        imageContainerStyle={{\n                            width: '8rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                    <SkillItem\n                        src={IconPostgresql}\n                        imageContainerStyle={{\n                            width: '5rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                </article>\n            </div>\n        </section>\n    )\n}\n\nconst CommunitySection = () => {\n    const theme = useTheme()\n\n    return (\n        <section>\n            <div\n                css={{\n                    backgroundColor: theme.colors.white,\n                    padding: '2rem',\n                    borderRadius: '1rem',\n                    display: 'flex',\n                    flexDirection: 'column',\n                    boxShadow: '1rem 1rem 1rem 0 rgb(68 68 68 / 20%)',\n                    gap: '0.5rem',\n                }}\n            >\n                <Text\n                    css={{\n                        color: theme.colors.carrot,\n                        fontSize: '1.5rem',\n                        borderBottom: '1px solid #ccc',\n                        fontWeight: 'bold',\n                        marginBottom: '1rem',\n                    }}\n                >\n                    Community\n                </Text>\n                {/** 1 Line */}\n                <article\n                    css={{\n                        display: 'flex',\n                        width: '280px',\n                    }}\n                >\n                    <SkillItem\n                        src={IconFigma}\n                        imageContainerStyle={{\n                            width: '9rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                </article>\n\n                <article\n                    css={{\n                        display: 'flex',\n                        width: '280px',\n                    }}\n                >\n                    <SkillItem\n                        src={IconNotion}\n                        imageContainerStyle={{\n                            width: '9rem',\n                        }}\n                        containerStyle={{\n                            width: '100%',\n                        }}\n                    />\n                </article>\n            </div>\n        </section>\n    )\n}\n\ntype MySkillSectionProps = {\n    sectionMethods: SectionMethodsType\n}\n\nconst MySkillSection: ForwardRefRenderFunction<\n    HTMLDivElement,\n    MySkillSectionProps\n> = ({sectionMethods}, ref) => {\n    return (\n        <Section\n            ref={ref}\n            css={{\n                justifyContent: 'center',\n                alignItems: 'flex-start',\n                backgroundColor: theme.colors.gray2,\n                padding: '6rem 2rem',\n            }}\n        >\n        <Center\n                css={{\n                    flexDirection: 'column',\n                    flex: 1,\n                }}\n            >\n                <SectionTitle\n                    title=\"SKILLS\"\n                    onClickScrollClip={() => sectionMethods.scrollToSection(2)}\n                />\n\n                <motion.div\n                    css={{\n                        display: 'flex',\n                        marginTop: '3rem',\n                        justifyContent: 'center',\n                        width: '100%',\n                        gap: '2rem',\n                    }}\n                    viewport={{\n                        once: true,\n                    }}\n                    initial={{translateY: 0, opacity: 0}}\n                    whileInView={{\n                        translateY: -20,\n                        opacity: 1,\n                    }}\n                    transition={{\n                        delay: 0.5,\n                        x: {duration: 1},\n                        default: {ease: 'linear'},\n                    }}\n                >\n                    <div\n                        css={{\n                            display: 'flex',\n                            gap: '2rem',\n                            flexDirection: 'column',\n                            '@media (min-width: 1200px)': {\n                                flexDirection: 'row',\n                            },\n                        }}\n                    >\n                        <FrontendSection/>\n\n                        <div\n                            css={{\n                                display: 'flex',\n                                gap: '2rem',\n                                flexDirection: 'column',\n                            }}\n                        >\n                            <BackendSection/>\n                            <CommunitySection/>\n                        </div>\n\n                    </div>\n                </motion.div>\n            </Center>\n        </Section>\n    )\n}\n\nexport default forwardRef(MySkillSection)\n","/Users/honggeonho/Documents/workspace/portfolio/src/components/templates/ProjectSection.tsx",[],[],"/Users/honggeonho/Documents/workspace/portfolio/src/emotion.d.ts",[],[],{"ruleId":"97","severity":1,"message":"98","line":7,"column":17,"nodeType":"99","endLine":7,"endColumn":52},{"ruleId":"100","severity":1,"message":"101","line":73,"column":35,"nodeType":"102","endLine":75,"endColumn":89},{"ruleId":"103","severity":1,"message":"104","line":98,"column":33,"nodeType":"102","endLine":98,"endColumn":58},{"ruleId":"103","severity":1,"message":"104","line":51,"column":25,"nodeType":"102","endLine":51,"endColumn":50},{"ruleId":"103","severity":1,"message":"104","line":58,"column":13,"nodeType":"102","endLine":58,"endColumn":31},"@next/next/no-title-in-document-head","Do not use `<title>` element with `<Head />` component from `next/document`. Titles should defined at the page-level using `<Head />` from `next/head` instead. See: https://nextjs.org/docs/messages/no-title-in-document-head","JSXElement","@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","Image elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]